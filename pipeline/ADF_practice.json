{
	"name": "ADF_practice",
	"properties": {
		"activities": [
			{
				"name": "Get Metadata",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ds_adlsgen2_arunkumar123_raw",
						"type": "DatasetReference"
					},
					"fieldList": [
						"lastModified",
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true,
						"enablePartitionDiscovery": false
					},
					"formatSettings": {
						"type": "BinaryReadSettings"
					}
				}
			},
			{
				"name": "Wait",
				"type": "Wait",
				"dependsOn": [
					{
						"activity": "Get Metadata",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"waitTimeInSeconds": 5
				}
			},
			{
				"name": "Filter",
				"type": "Filter",
				"dependsOn": [
					{
						"activity": "Wait",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Metadata').output.childItems",
						"type": "Expression"
					},
					"condition": {
						"value": "@startswith(item().name,'20')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "If Condition",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Filter",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@greater(length(activity('Filter').output.value), 0)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Append variable",
							"type": "AppendVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "FileCheckVariable",
								"value": "No files found"
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Append variable2",
							"type": "AppendVariable",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"variableName": "FileCheckVariable",
								"value": "Files exist"
							}
						}
					]
				}
			},
			{
				"name": "ForEach",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Filter",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Filter').output.value\n",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Switch1",
							"type": "Switch",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"on": {
									"value": "@substring(item().name, add(lastIndexOf(item().name, '.'), 1), 3)",
									"type": "Expression"
								},
								"cases": [
									{
										"value": "csv",
										"activities": [
											{
												"name": "Copy data4",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"wildcardFileName": {
																"value": "@item().name",
																"type": "Expression"
															},
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "AzureSqlSink",
														"writeBehavior": "upsert",
														"upsertSettings": {
															"useTempDB": true,
															"keys": [
																"SalesOrderNumber",
																"SalesOrderLineNumber"
															]
														},
														"sqlWriterUseTableLock": false,
														"disableMetricsCollection": false
													},
													"enableStaging": false,
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"name": "SalesOrderNumber",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "SalesOrderNumber",
																	"type": "Int32",
																	"physicalType": "int"
																}
															},
															{
																"source": {
																	"name": "SalesOrderLineNumber",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "SalesOrderLineNumber",
																	"type": "Int32",
																	"physicalType": "int"
																}
															},
															{
																"source": {
																	"name": "OrderDate",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "OrderDate",
																	"type": "String",
																	"physicalType": "varchar"
																}
															},
															{
																"source": {
																	"name": "CustomerName",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "CustomerName",
																	"type": "String",
																	"physicalType": "varchar"
																}
															},
															{
																"source": {
																	"name": "EmailAddress",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "EmailAddress",
																	"type": "String",
																	"physicalType": "varchar"
																}
															},
															{
																"source": {
																	"name": "Item",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "Item",
																	"type": "String",
																	"physicalType": "varchar"
																}
															},
															{
																"source": {
																	"name": "Quantity",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "Quantity",
																	"type": "Int32",
																	"physicalType": "int"
																}
															},
															{
																"source": {
																	"name": "UnitPrice",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "UnitPrice",
																	"type": "Decimal",
																	"physicalType": "decimal",
																	"scale": 2,
																	"precision": 18
																}
															},
															{
																"source": {
																	"name": "TaxAmount",
																	"type": "String",
																	"physicalType": "String"
																},
																"sink": {
																	"name": "TaxAmount",
																	"type": "Decimal",
																	"physicalType": "decimal",
																	"scale": 2,
																	"precision": 18
																}
															}
														],
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "ds_csv",
														"type": "DatasetReference"
													}
												],
												"outputs": [
													{
														"referenceName": "ds_salesOrder_table",
														"type": "DatasetReference"
													}
												]
											}
										]
									}
								],
								"defaultActivities": [
									{
										"name": "Fail1",
										"type": "Fail",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"message": "default switch case",
											"errorCode": "default switch case"
										}
									}
								]
							}
						}
					]
				}
			}
		],
		"variables": {
			"FileCheckVariable": {
				"type": "Array"
			}
		},
		"folder": {
			"name": "weekly_project"
		},
		"annotations": [],
		"lastPublishTime": "2025-02-14T19:14:21Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}